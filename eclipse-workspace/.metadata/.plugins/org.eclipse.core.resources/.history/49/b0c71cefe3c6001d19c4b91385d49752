package model.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import org.hibernate.Session;
import org.hibernate.SessionFactory;

import model.domain.CustomerBean;

public class CustomerDAOJdbc implements CustomerDAO {
	private SessionFactory sessionFactory=null;
		
	public CustomerDAOJdbc(SessionFactory sessionFactory) {
		super();
		this.sessionFactory = sessionFactory;
	}
	public Session getSession() {
		return this.sessionFactory.getCurrentSession();
	}
	
	
	public static void main(String[] args) {
		CustomerDAO dao = new CustomerDAOJdbc();
		CustomerBean bean = dao.select("Babe");
		System.out.println("bean="+bean);
		
		boolean result = dao.update("E".getBytes(),
				"ellen@lab.com", new java.util.Date(0), "Ellen");
		System.out.println("result="+result);
	}
	private static final String SELECT_BY_CUSTID = "select * from customer where custid=?";
	@Override
	public CustomerBean select(String custid) {
		if(custid!=null) {
			return getSession().get(CustomerBean.class,custid);
		}
		return null;
		
		CustomerBean result = null;
		if(custid!=null) {
			Connection conn = null;
			PreparedStatement stmt = null;
			ResultSet rset = null;
			try {
				conn = DriverManager.getConnection(URL, USERNAME, PASSWORD);
				stmt = conn.prepareStatement(SELECT_BY_CUSTID);
				stmt.setString(1, custid);
				rset = stmt.executeQuery();
				if(rset.next()) {
					result = new CustomerBean();
					result.setCustid(rset.getString("custid"));
					result.setPassword(rset.getBytes("password"));
					result.setEmail(rset.getString("email"));
					result.setBirth(rset.getDate("birth"));
				}
			} catch (SQLException e) {
				e.printStackTrace();
			} finally {
				if (rset!=null) {
					try {
						rset.close();
					} catch (SQLException e) {
						e.printStackTrace();
					}
				}
				if (stmt!=null) {
					try {
						stmt.close();
					} catch (SQLException e) {
						e.printStackTrace();
					}
				}
				if (conn!=null) {
					try {
						conn.close();
					} catch (SQLException e) {
						e.printStackTrace();
					}
				}
			}			
		}
		return result;
	}
	private static final String UPDATE =
			"update customer set password=?, email=?, birth=? where custid=?";
	@Override
	public boolean update(byte[] password, String email, java.util.Date birth, String custid) {
		if(custid!=null) {
			try(
				Connection conn = DriverManager.getConnection(URL, USERNAME, PASSWORD);
				PreparedStatement stmt = conn.prepareStatement(UPDATE);) {
				
				stmt.setBytes(1, password);
				stmt.setString(2, email);
				if(birth!=null) {
					long time = birth.getTime();
					stmt.setDate(3, new java.sql.Date(time));
				} else {
					stmt.setDate(3, null);
				}
				stmt.setString(4, custid);
				
				int i = stmt.executeUpdate();
				if(i==1) {
					return true;
				}
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		return false;
	}
}
